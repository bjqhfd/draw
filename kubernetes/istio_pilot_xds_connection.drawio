<mxfile host="app.diagrams.net" modified="2020-12-09T05:07:29.815Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36" etag="y5fCrme3f_tqEdxVbgIZ" version="13.11.0" type="github">
  <diagram id="8Z5l7oX32oWCbpCxlC_2" name="Page-1">
    <mxGraphModel dx="1849" dy="437" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-1" value="&lt;div&gt;// pilot/pkg/xds/ads.go&lt;/div&gt;&lt;div&gt;type Connection struct {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// PeerAddr is the address of the client, from network layer.&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;PeerAddr string&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// proxy is the client to which this connection is established.&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;proxy *model.Proxy&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// Sending on this channel results in a push.&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;pushChannel chan *Event&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// Both ADS and SDS streams implement this interface&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;stream DiscoveryStream&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="260" y="180" width="500" height="220" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-2" value="&lt;div&gt;// pilot/pkg/xds/ads.go&lt;/div&gt;&lt;div&gt;func newConnection(peerAddr string, stream DiscoveryStream) *Connection {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; return &amp;amp;Connection{&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pushChannel: make(chan *Event),&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stop:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; make(chan struct{}),&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PeerAddr:&amp;nbsp; &amp;nbsp; peerAddr,&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Connect:&amp;nbsp; &amp;nbsp; &amp;nbsp;time.Now(),&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stream:&amp;nbsp; &amp;nbsp; &amp;nbsp; stream,&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="670" y="585" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-3" value="&lt;div&gt;// pilot/pkg/xds/ads.go&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) StreamAggregatedResources(stream discovery.AggregatedDiscoveryService_StreamAggregatedResourcesServer) {&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;ctx := stream.Context()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;peerAddr := &quot;0.0.0.0&quot;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;if peerInfo, ok := peer.FromContext(ctx); ok {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;peerAddr = peerInfo.Addr.String()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;ids, err := s.authenticate(ctx)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;s.globalPushContext().InitContext(s.Env, nil, nil)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;con := newConnection(peerAddr, stream)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;con.Identities = ids&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;var receiveError error&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;reqChannel := make(chan *discovery.DiscoveryRequest, 1)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;go s.receive(con, reqChannel, &amp;amp;receiveError)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;for {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;select {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;case req, ok := &amp;lt;-reqChannel: //处理来自envoy proxy的请求&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;s.processRequest(req, con)&lt;/div&gt;&lt;div&gt;//真正的service等变换推送给envoy proxy的请求,来自doSendPushes&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;case pushEv := &amp;lt;-con.pushChannel:&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;err := s.pushConnection(con, pushEv)&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;pushEv.done()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="120" y="800" width="470" height="410" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-4" value="&lt;div&gt;// pilog/pkg/xds/ads.go&amp;nbsp;&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) receive(con *Connection, reqChannel chan *discovery.DiscoveryRequest) {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;firstReq := true&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;for {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;req, err := con.stream.Recv()&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;if firstReq {&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;firstReq = false&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;s.initConnection(req.Node, con)&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;select {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;case reqChannel &amp;lt;- req:&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="720" y="810" width="380" height="220" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-5" value="&lt;div&gt;// pilog/pkg/xds/ads.go&amp;nbsp;&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) processRequest(req *discovery.DiscoveryRequest, con *Connection) error {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;push := s.globalPushContext()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;return s.pushXds(con, push, versionInfo(), con.Watched(req.TypeUrl), &amp;amp;model.PushRequest{Full: true}) // 首次全量更新&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="720" y="1080" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-6" value="" style="endArrow=classic;html=1;entryX=-0.009;entryY=0.421;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="nhtH7vUH3YWTf0dfOCQL-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="590" y="990" as="sourcePoint" />
            <mxPoint x="640" y="940" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-7" value="" style="endArrow=classic;html=1;entryX=-0.003;entryY=0.342;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1.004;exitY=0.732;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="nhtH7vUH3YWTf0dfOCQL-3" target="nhtH7vUH3YWTf0dfOCQL-5" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="600" y="1120" as="sourcePoint" />
            <mxPoint x="650" y="1070" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-8" value="&lt;div&gt;// pilot/pkg/xds/gen.go&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) pushXds(con *Connection, push *model.PushContext,&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;currentVersion string, w *model.WatchedResource, req *model.PushRequest) error {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;gen := s.findGenerator(w.TypeUrl, con)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;t0 := time.Now()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;cl := gen.Generate(con.proxy, push, w, req)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;resp := &amp;amp;discovery.DiscoveryResponse{&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;TypeUrl:&amp;nbsp; &amp;nbsp; &amp;nbsp;w.TypeUrl,&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;VersionInfo: currentVersion,&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;Nonce:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;nonce(push.Version),&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;Resources:&amp;nbsp; &amp;nbsp;cl,&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;con.send(resp)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1180" y="830" width="450" height="300" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-9" value="&lt;div&gt;// pilog/pkg/xds/ads.go&amp;nbsp;&lt;/div&gt;&lt;div&gt;func (conn *Connection) send(res *discovery.DiscoveryResponse) {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;errChan := make(chan error, 1)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;t := time.NewTimer(sendTimeout)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;go func() {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;start := time.Now()&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;defer func() { recordSendTime(time.Since(start)) }()&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;errChan &amp;lt;- conn.stream.Send(res)&amp;nbsp; // 真正发送消息&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;close(errChan)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;select {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;case &amp;lt;-t.C:&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;xdsResponseWriteTimeouts.Increment()&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;return status.Errorf(codes.DeadlineExceeded, &quot;timeout sending&quot;)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;case err := &amp;lt;-errChan:&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1215.5" y="1240" width="379" height="300" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-10" value="&lt;div&gt;// DiscoveryStream is an interface for ADS.&lt;/div&gt;&lt;div&gt;type DiscoveryStream interface {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;Send(*discovery.DiscoveryResponse) error&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;Recv() (*discovery.DiscoveryRequest, error)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;grpc.ServerStream&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1215.5" y="1590" width="314.5" height="140" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-11" value="&lt;div&gt;// pilot/pkg/xds/ads.go&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) pushConnection(con *Connection, pushEv *Event) {&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;pushRequest := pushEv.pushRequest&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;if pushRequest.Full {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;s.updateProxy(con.proxy, pushRequest.Push)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;currentVersion := versionInfo()&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;for _, w := range getPushResources(con.proxy.WatchedResources) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;s.pushXds(con, pushRequest.Push, currentVersion, w, pushRequest)&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="720" y="1280" width="420" height="270" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-12" value="" style="endArrow=classic;html=1;exitX=0.976;exitY=0.932;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="nhtH7vUH3YWTf0dfOCQL-3" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="590" y="1210" as="sourcePoint" />
            <mxPoint x="720" y="1312" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-13" value="s.receive" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="610" y="920" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-14" value="processRequest" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="630" y="1080" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-15" value="con.pushChannel" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="580" y="1250" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-17" value="" style="endArrow=classic;html=1;exitX=-0.009;exitY=0.797;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="nhtH7vUH3YWTf0dfOCQL-4" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="840" y="1080" as="sourcePoint" />
            <mxPoint x="590" y="1073" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-18" value="reqChannel" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="610" y="1000" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-19" value="" style="endArrow=classic;html=1;entryX=-0.006;entryY=0.86;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="nhtH7vUH3YWTf0dfOCQL-8" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1120" y="1150" as="sourcePoint" />
            <mxPoint x="1170" y="1100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-20" value="" style="endArrow=classic;html=1;entryX=0.012;entryY=0.922;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.989;exitY=0.101;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="nhtH7vUH3YWTf0dfOCQL-11" target="nhtH7vUH3YWTf0dfOCQL-8" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1130" y="1330" as="sourcePoint" />
            <mxPoint x="1180" y="1280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-21" value="pushXds" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1180" y="1190" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-22" value="pushXds" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1130" y="1070" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-23" value="" style="endArrow=classic;html=1;entryX=0.383;entryY=-0.007;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.4;exitY=1.004;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="nhtH7vUH3YWTf0dfOCQL-8" target="nhtH7vUH3YWTf0dfOCQL-9" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1380" y="1180" as="sourcePoint" />
            <mxPoint x="1430" y="1130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nhtH7vUH3YWTf0dfOCQL-24" value="" style="endArrow=classic;html=1;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1390" y="1540" as="sourcePoint" />
            <mxPoint x="1390" y="1590" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="U2Q4NtInBIXudPV4uZjc-1" value="" style="endArrow=classic;html=1;entryX=0.023;entryY=0.969;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="nhtH7vUH3YWTf0dfOCQL-2" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="590" y="850" as="sourcePoint" />
            <mxPoint x="640" y="800" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-1" value="&lt;div&gt;// pilot/pkg/bootstrap/server.go&lt;/div&gt;&lt;div&gt;func (s *Server) initGrpcServer(options *istiokeepalive.Options) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;grpcOptions := s.grpcServerOptions(options)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;s.grpcServer = grpc.NewServer(grpcOptions...)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;s.XDSServer.Register(s.grpcServer)&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;reflection.Register(s.grpcServer)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-640" y="610" width="360" height="170" as="geometry" />
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-2" value="&lt;div&gt;// pilot/pkg/xds/discovery.go&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) Register(rpcs *grpc.Server) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;// Register v3 server&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;discovery.RegisterAggregatedDiscoveryServiceServer(rpcs, s)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-640" y="840" width="360" height="120" as="geometry" />
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-3" value="&lt;div&gt;// go-control-plane-master/envoy/service/discovery/v3/ads.pb.go&lt;/div&gt;&lt;div&gt;func RegisterAggregatedDiscoveryServiceServer(s *grpc.Server, srv AggregatedDiscoveryServiceServer) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;s.RegisterService(&amp;amp;_AggregatedDiscoveryService_serviceDesc, srv)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-640" y="1039" width="440" height="130" as="geometry" />
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-4" value="&lt;div&gt;// go-control-plane-master/envoy/service/discovery/v3/ads.pb.go&lt;/div&gt;&lt;div&gt;var _AggregatedDiscoveryService_serviceDesc = grpc.ServiceDesc{&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;ServiceName: &quot;envoy.service.discovery.v3.AggregatedDiscoveryService&quot;,&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;HandlerType: (*AggregatedDiscoveryServiceServer)(nil),&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;Methods:&amp;nbsp; &amp;nbsp; &amp;nbsp;[]grpc.MethodDesc{},&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;Streams: []grpc.StreamDesc{&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;StreamName:&amp;nbsp; &amp;nbsp; &quot;StreamAggregatedResources&quot;,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;Handler:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;_AggregatedDiscoveryService_StreamAggregatedResources_Handler,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;ServerStreams: true,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;ClientStreams: true,&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;},&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;StreamName:&amp;nbsp; &amp;nbsp; &quot;DeltaAggregatedResources&quot;,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;Handler:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;_AggregatedDiscoveryService_DeltaAggregatedResources_Handler,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;ServerStreams: true,&lt;/div&gt;&lt;div&gt;&lt;span&gt;			&lt;/span&gt;ClientStreams: true,&lt;/div&gt;&lt;div&gt;&lt;span&gt;		&lt;/span&gt;},&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;},&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;Metadata: &quot;envoy/service/discovery/v3/ads.proto&quot;,&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-640" y="1240" width="560" height="360" as="geometry" />
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-5" value="&lt;div&gt;// grpc library&amp;nbsp;&lt;/div&gt;&lt;div&gt;func (s *Server) RegisterService(sd *ServiceDesc, ss interface{}) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; ht := reflect.TypeOf(sd.HandlerType).Elem()&lt;/div&gt;&lt;div&gt;&amp;nbsp; st := reflect.TypeOf(ss)&lt;/div&gt;&lt;div&gt;&amp;nbsp; s.register(sd, ss)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;func (s *Server) register(sd *ServiceDesc, ss interface{}) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; //初始化一个服务&lt;/div&gt;&lt;div&gt;&amp;nbsp; srv := &amp;amp;service{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; server: ss,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; md:&amp;nbsp; &amp;nbsp; &amp;nbsp;make(map[string]*MethodDesc),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sd:&amp;nbsp; &amp;nbsp; &amp;nbsp;make(map[string]*StreamDesc),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; mdata:&amp;nbsp; sd.Metadata,&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; //根据名字映射方法&lt;/div&gt;&lt;div&gt;&amp;nbsp; for i := range sd.Methods {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; d := &amp;amp;sd.Methods[i]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; srv.md[d.MethodName] = d&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; for i := range sd.Streams {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; d := &amp;amp;sd.Streams[i]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; srv.sd[d.StreamName] = d&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; 把服务注册到server中&lt;/div&gt;&lt;div&gt;&amp;nbsp; s.m[sd.ServiceName] = srv&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="-640" y="1660" width="410" height="410" as="geometry" />
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-6" value="" style="endArrow=classic;html=1;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-480" y="780" as="sourcePoint" />
            <mxPoint x="-480" y="840" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-7" value="" style="endArrow=classic;html=1;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-480" y="1170" as="sourcePoint" />
            <mxPoint x="-480" y="1240" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-8" value="" style="endArrow=classic;html=1;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-480" y="960" as="sourcePoint" />
            <mxPoint x="-483" y="1037" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-9" value="" style="endArrow=classic;html=1;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-480" y="1600" as="sourcePoint" />
            <mxPoint x="-480" y="1660" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oYCwi5PmY8g_NuQjfDfJ-10" value="" style="endArrow=classic;html=1;entryX=1.005;entryY=0.597;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" target="oYCwi5PmY8g_NuQjfDfJ-3">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="116" y="1016" as="sourcePoint" />
            <mxPoint x="110" y="990" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
