<mxfile host="app.diagrams.net" modified="2020-11-22T13:31:49.024Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36" etag="CgSjF5CZ6zJXk00UDOpO" version="13.10.0" type="github">
  <diagram id="46lXkTHeNMov4aTLj0D8" name="Page-1">
    <mxGraphModel dx="1022" dy="437" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="zQ5s2zenVsvsD_EQdR8D-1" value="&lt;div&gt;// pilot/pkg/boostrap/server.go&lt;/div&gt;&lt;div&gt;func (s *Server) initDiscoveryService(args *PilotArgs) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; s.addStartFunc(func(stop &amp;lt;-chan struct{}) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.XDSServer.Start(stop)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; s.initGrpcServer(args.KeepaliveOptions)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; if args.ServerOptions.GRPCAddr != &quot;&quot; {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; grpcListener, err := net.Listen(&quot;tcp&quot;, args.ServerOptions.GRPCAddr)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.GRPCListener = grpcListener&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; } else if s.GRPCListener == nil {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; m := cmux.New(s.HTTPListener)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.GRPCListener = m.Match(cmux.HTTP2HeaderField(&quot;content-type&quot;,&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;application/grpc&quot;))&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.HTTPListener = m.Match(cmux.Any())&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; go func() {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; m.Serve()&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }()&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="150" y="230" width="530" height="290" as="geometry" />
        </mxCell>
        <mxCell id="zQ5s2zenVsvsD_EQdR8D-2" value="&lt;div&gt;// pilot/pkg/xds/discovery.go&lt;/div&gt;&lt;div&gt;func (s *DiscoveryServer) Start(stopCh &amp;lt;-chan struct{}) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; if s.InternalGen != nil {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.InternalGen.Run(stopCh)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; go s.handleUpdates(stopCh)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; go s.periodicRefreshMetrics(stopCh)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; go s.sendPushes(stopCh)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="760" y="160" width="320" height="180" as="geometry" />
        </mxCell>
        <mxCell id="zQ5s2zenVsvsD_EQdR8D-3" value="" style="endArrow=classic;html=1;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" target="zQ5s2zenVsvsD_EQdR8D-2">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="680" y="265" as="sourcePoint" />
            <mxPoint x="730" y="215" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zQ5s2zenVsvsD_EQdR8D-4" value="&lt;div&gt;// pilot/pkg/boostrap/server.go&lt;/div&gt;&lt;div&gt;func (s *Server) initGrpcServer(options&amp;nbsp; &amp;nbsp; &amp;nbsp;*istiokeepalive.Options) {&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; grpcOptions := s.grpcServerOptions(options)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; s.grpcServer = grpc.NewServer(grpcOptions...)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; s.XDSServer.Register(s.grpcServer)&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; reflection.Register(s.grpcServer)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="760" y="400" width="320" height="130" as="geometry" />
        </mxCell>
        <mxCell id="zQ5s2zenVsvsD_EQdR8D-5" value="" style="endArrow=classic;html=1;entryX=-0.004;entryY=0.133;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1.006;exitY=0.375;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="zQ5s2zenVsvsD_EQdR8D-1" target="zQ5s2zenVsvsD_EQdR8D-4">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="680" y="420" as="sourcePoint" />
            <mxPoint x="730" y="370" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
